

I want to build a bot that automatically enrolls in free courses on a website called https://www.udemy.com/
I want to get the link for those free courses and their coupon from this website
https://www.real.discount/
when u open this website https://www.real.discount/ there are a list of courses that have coupon and are free to enroll in 
and it has a Load More button to load more courses 
the XPATH for selecting courses goes like this:

/html/body/div[2]/section[2]/div/div[3]/ul/li[1]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[2]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[3]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[4]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[5]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[6]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[7]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[8]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[9]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[10]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[11]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[12]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[13]/a/div/div[1]/img
notice that each course ling is in a li element

I have to open each course in a new tab then wait for the page to load 
then get the URL for the course from a button called Get Coupon
the XPATH for selecting the Get Coupon button always goes like this examples

/html/body/div[2]/div/div[2]/div[3]/div[2]/a/div/center/span
/html/body/div[2]/div/div[2]/div[3]/div[2]/a/div/center/span
/html/body/div[2]/div/div[2]/div[3]/div[2]/a/div/center/span


then open the course URL in a new tab
and after that see if the course is free or not
the XPATH for checking if the course is Free or not always goes like this:
/html/body/div[1]/div[2]/div/div/div[1]/div[2]/div[1]/div[2]/div[1]/div[2]/div/div/div[1]/div/div[2]/div/div/div[1]/span[2]
 /html/body/div[1]/div[2]/div/div/div[1]/div[2]/div[1]/div[2]/div[1]/div[2]/div/div/div[1]/div/div[2]/div/div/div[1]/span[2]

if the course is free find the Enroll now button and click it with this XPATH
/html/body/div[1]/div[2]/div/div/div[1]/div[2]/div[1]/div[2]/div[1]/div[2]/div/div/div[1]/div/div[5]/div/button/span
/html/body/div[1]/div[2]/div/div/div[1]/div[2]/div[1]/div[2]/div[1]/div[2]/div/div/div[1]/div/div[5]/div/button/span
if couldn't find the Enroll now check if there is a Go to course with this XPATH
/html/body/div[1]/div[2]/div/div/div[1]/div[2]/div[1]/div[2]/div[1]/div[2]/div/div/div[1]/div/div[2]/div/button/span
if there is that means that you are already enrolled in this course and go to next course
some times the course is free but u cant find the Enroll now button in that case the the course link in a excel file and alert me to open it 

 then wait for the page to load and then click find Enroll now button with this XPATH
/html/body/div[1]/div[2]/div/div/div/aside/div/div/div[2]/div[2]/button/span
and click it
and wait for the page to load then look for Start course button with this XPATH
/html/body/div[1]/div[2]/div/div/div[1]/div/div[4]/div[2]/div[3]/a/span

and when Start course button was found it shows that you have enrolled in the course so go to the next course and Enroll in the new course

I want the program to run all the time and check the https://www.real.discount/ website for new courses that it has not already Enrolled in 
new courses always come on top and their li element number in the XPATH would start from 1
like this

/html/body/div[2]/section[2]/div/div[3]/ul/li[1]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[2]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[3]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[4]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[5]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[6]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[7]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[8]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[9]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[10]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[11]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[12]/a/div/div[1]/img
/html/body/div[2]/section[2]/div/div[3]/ul/li[13]/a/div/div[1]/img
and so on





To accomplish this task, we can use a combination of web scraping libraries and browser automation tools. Here's a step-by-step plan to build the program:

1. Set up the environment:
   - Install the necessary libraries. We can use libraries like BeautifulSoup for web scraping and Selenium for browser automation.
   - Set up the WebDriver for Selenium, such as ChromeDriver or GeckoDriver, depending on your preferred browser.

2. Implement the web scraping:
   - Use BeautifulSoup or a similar library to scrape the Real Discount website.
   - Parse the HTML response and extract the necessary information, such as course links and coupons.
   - Store the extracted information in a suitable data structure, such as a list or dictionary.

3. Automate the browser:
   - Use Selenium to automate the browser actions.
   - Open a new tab for each course link obtained from the Real Discount website.
   - Wait for the page to load before proceeding to the next steps.

4. Check if the course is free:
   - Use XPath or other suitable methods to locate elements on the course page.
   - Check if the course is free by inspecting the relevant element.
   - If the course is free, proceed to enroll in the course.

5. Enroll in the course:
   - Locate the "Enroll Now" button on the course page using XPath or other methods.
   - Click the "Enroll Now" button.
   - Wait for the page to load before proceeding to the next steps.

6. Verify enrollment:
   - Check if the enrollment was successful by locating relevant elements, such as the "Start Course" button.
   - If the enrollment is successful, proceed to the next course.
   - If the enrollment is not successful, save the course link in an Excel file for manual inspection.

7. Repeat the process:
   - Implement a loop to continuously check for new courses on the Real Discount website.
   - Periodically scrape the website, extract the course information, and enroll in new courses that have not been previously enrolled in.

8. Handle exceptions:
   - Implement error handling to handle any exceptions that may occur during the process, such as network errors or element not found errors.
   - Add appropriate logging or error reporting mechanisms to track any issues.

Remember to be mindful of the website's terms of service and ensure that your web scraping activities comply with them. Additionally, keep in mind that websites may have protections in place to prevent automated actions, so make sure to build in appropriate delays and handle any CAPTCHA challenges that may arise.

This plan provides a high-level overview of the steps involved in building the program. You can start implementing each step and refine the code as you progress. If you have any specific questions or need further assistance with any of the steps, feel free to ask!

now give me a working script to start with
I have a cookie file named cookies.json in the scripts root directory
that has https://www.udemy.com/  website loged in session cookies
I want to start the page with this cookie

the only importatn thing for the cookie is the value of access_token which in this case is this zCaiYfBq7d4mB4J8s3SLwq3DaIYQ4gWq3xoegbeU
        "name": "access_token",
        "value": "zCaiYfBq7d4mB4J8s3SLwq3DaIYQ4gWq3xoegbeU",
        "domain": "www.udemy.com",
u have to inject this value in the new browser that it starts

to start with just give me the code to start a chrome browser with the session cookie for https://www.udemy.com/ website